/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.MarketPlace;

import Business.MarketPlace.MarketPlace;
import Business.EcoSystem;
import Business.UserAccountManagement.UserAccount;
import Business.WorkQueue.DonateProduct;
import Business.WorkQueue.DonateProductDirectory;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanjay Bhaskar Kashyap
 */
public class UserAppJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserAppJPanel
     */
    private UserAccount userAcc;
    private EcoSystem system;
    private JPanel container;

    public UserAppJPanel(JPanel userProcessContainer, EcoSystem system, UserAccount userAcc) {
        initComponents();
        this.system = system;
        this.container = userProcessContainer;
        this.userAcc = userAcc;
        displayTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAppDetails = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        collectBlood = new javax.swing.JButton();
        cancelApp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        specificsTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        productType = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(250, 249, 251));
        setPreferredSize(new java.awt.Dimension(1160, 750));

        jPanel1.setBackground(new java.awt.Color(250, 249, 251));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 750));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel1.setText("Manage Appointments");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 31, -1, -1));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAppDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "User ID", "Password", "Phone Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAppDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAppDetailsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblAppDetails);

        jPanel8.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 630));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 860, 630));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        collectBlood.setBackground(new java.awt.Color(51, 51, 255));
        collectBlood.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        collectBlood.setForeground(new java.awt.Color(255, 255, 255));
        collectBlood.setText("Collect Product");
        collectBlood.setBorder(null);
        collectBlood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectBloodActionPerformed(evt);
            }
        });
        jPanel9.add(collectBlood, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 200, 39));

        cancelApp.setBackground(new java.awt.Color(255, 55, 95));
        cancelApp.setFont(new java.awt.Font("SF Pro Text", 1, 14)); // NOI18N
        cancelApp.setForeground(new java.awt.Color(255, 255, 255));
        cancelApp.setText("Cancel");
        cancelApp.setBorder(null);
        cancelApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAppActionPerformed(evt);
            }
        });
        jPanel9.add(cancelApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 190, 39));

        jLabel2.setFont(new java.awt.Font("SF Pro Display", 1, 36)); // NOI18N
        jLabel2.setText("Enter Details");
        jPanel9.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 300, 50));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(73, 84, 90));
        jLabel7.setText("Products");
        jPanel9.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 220, -1));

        specificsTxt.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        specificsTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                specificsTxtKeyPressed(evt);
            }
        });
        jPanel9.add(specificsTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 420, 40));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(73, 84, 90));
        jLabel8.setText("Specifics");
        jPanel9.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 220, -1));

        productType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chair", "Table", "Bed", "Organizer", "Cookware", "Heater", "Bike" }));
        productType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productTypeActionPerformed(evt);
            }
        });
        jPanel9.add(productType, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 420, 40));

        jPanel1.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 90, 470, 630));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblAppDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAppDetailsMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblAppDetailsMouseClicked

    private void collectBloodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectBloodActionPerformed
        // TODO add your handling code here:
        collectBlood();
    }//GEN-LAST:event_collectBloodActionPerformed

    private void cancelAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAppActionPerformed
        // TODO add your handling code here:
        canelBloodDonaApp();
    }//GEN-LAST:event_cancelAppActionPerformed

    private void productTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productTypeActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_productTypeActionPerformed

    private void specificsTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_specificsTxtKeyPressed
//        // TODO add your handling code here:
//        char c = evt.getKeyChar();
//        if (Character.isLetter(c)) {
//            wbcTxt.setEditable(false);
//            JOptionPane.showMessageDialog(null, "Please Enter a valid number");
//        } else {
//            wbcTxt.setEditable(true);
//        }
    }//GEN-LAST:event_specificsTxtKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelApp;
    private javax.swing.JButton collectBlood;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> productType;
    private javax.swing.JTextField specificsTxt;
    private javax.swing.JTable tblAppDetails;
    // End of variables declaration//GEN-END:variables

    private void displayTable() {
        //  throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        tblAppDetails.setModel(new DefaultTableModel(null, new String[]{"ID", "Center", "Status", "Date", "Time"}));
        DonateProductDirectory productDonate = system.getDonateProdirectory();
        List<DonateProduct> donList = productDonate.getDonors();

        int l = donList.size();
        //System.out.println("size"+u);
        for (int i = 0; i < l; i++) {
            DonateProduct productDonor = donList.get(i);
            MarketPlace bw = (MarketPlace) (userAcc);

            if (productDonor.getMarketplaceName().matches(bw.getUsername())) {

                DefaultTableModel table = (DefaultTableModel) tblAppDetails.getModel();
                String s1 = String.valueOf(productDonor.getId());

                String s2[] = {s1, productDonor.getFirstName(), productDonor.getStatus(), productDonor.getAppoinmentDate().toString(), productDonor.getAppoinmentTime()};
                table.addRow(s2);

            }

        }

    }

    private void collectBlood() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        if (specificsTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter all the value!!");
        } else {
            DefaultTableModel table = (DefaultTableModel) tblAppDetails.getModel();
            int selectedRow = tblAppDetails.getSelectedRow();
            if (selectedRow >= 0) {
                int sRow = Integer.parseInt(table.getValueAt(selectedRow, 0).toString());

                DonateProductDirectory donateDir = system.getDonateProdirectory();
                List<DonateProduct> listDonate = donateDir.getDonors();
                int l = listDonate.size();
                MarketPlace mp = (MarketPlace) (userAcc);
                for (int i = 0; i < l; i++) {
                    DonateProduct productDonate = listDonate.get(i);
                    if (sRow == productDonate.getId()/*&&o.getStatus().matches("Deliver Man Assigned")*/) {
                        if (productDonate.getStatus().matches("Appoinment Booked")) {
                            productDonate.setStatus("Product Collected");
                            productDonate.setProductType(productType.getSelectedItem().toString());
                            productDonate.setSpecifics(specificsTxt.getText());
                            JOptionPane.showMessageDialog(null, "Successfully added product donation details!!");
                            specificsTxt.setText(" ");
                            

                        } else {
                            JOptionPane.showMessageDialog(null, "Incorrect Action!!");
                        }
                    }
                }
                tblAppDetails.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Status", "Date", "Time"}));
                displayTable();
            } else {
                JOptionPane.showMessageDialog(null, "Please Select a Row!!");
            }
        }

    }

    private void canelBloodDonaApp() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

        DefaultTableModel table = (DefaultTableModel) tblAppDetails.getModel();
        int selectedRow = tblAppDetails.getSelectedRow();
        if (selectedRow >= 0) {
            int sRow = Integer.parseInt(table.getValueAt(selectedRow, 0).toString());

            DonateProductDirectory donateProduct= system.getDonateProdirectory();
            List<DonateProduct> donateList = donateProduct.getDonors();
            int l = donateList.size();
            MarketPlace bw = (MarketPlace) (userAcc);
            for (int i = 0; i < l; i++) {
                DonateProduct dProduct = donateList.get(i);
                if (sRow == dProduct.getId()/*&&o.getStatus().matches("Deliver Man Assigned")*/) {
                    if (dProduct.getStatus().matches("Appoinment Booked")) {
                        dProduct.setStatus("Cancelled");
                    } else {
                        JOptionPane.showMessageDialog(null, "Incorrect action!!");
                    }

                }
            }
            tblAppDetails.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Status", "Date", "Time"}));
            displayTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Row!!");
        }

    }
}

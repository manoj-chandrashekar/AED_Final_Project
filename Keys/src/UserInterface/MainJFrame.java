/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface;

import Business.Builder.Builder;
import Business.Consultant.Consultant;
import Business.DatabaseUtil.DB4OUtil;
import Business.EcoSystem;
import Business.MarketPlace.MarketPlace;
import Business.PointOfContact.Ambulance.Ambulance;
import Business.PointOfContact.Fire.Fire;
import Business.PointOfContact.Maintenance.Maintenance;
import Business.SystemModel;
import Business.User.User;
import java.awt.CardLayout;

/**
 *
 * @author Manoj Chandrasekaran
 */
public class MainJFrame extends javax.swing.JFrame {

    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private SystemModel systemModel;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        systemModel = new SystemModel();
        ecoSystem = dB4OUtil.retrieveSystem();
        this.setSize(1920, 1080);
        this.setResizable(false);
        setLoginPage();
//        insertDummyData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        workArea = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        workArea.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(workArea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(workArea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel workArea;
    // End of variables declaration//GEN-END:variables

    private void setLoginPage() {
        UserLogin wa = new UserLogin(workArea, ecoSystem);
        workArea.add("UserLogin", wa);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }

    private void insertDummyData() {
        Consultant con1 = new Consultant("con", "con", "Ernie", "Low brokerage", 8888888888L, "Boston rental");
        ecoSystem.getUserAccDirectory().addAccount(con1);
        ecoSystem.getConsultantDirectory().addNewConsultant(con1);
        
        Consultant con2 = new Consultant("con2", "con", "Leslie", "Best locality", 857857857L, "LLRental");
        ecoSystem.getUserAccDirectory().addAccount(con2);
        ecoSystem.getConsultantDirectory().addNewConsultant(con2);
        
        MarketPlace m1 = new MarketPlace("Student goods", "1123-4123", "market", "market", 8128471924L);
        ecoSystem.getUserAccDirectory().addAccount(m1);
        ecoSystem.getMarketPlaceDirectory().addMarketPlace(m1);
        
        MarketPlace m2 = new MarketPlace("LetGo", "1251-4123", "market2", "market", 198274389L);
        ecoSystem.getUserAccDirectory().addAccount(m2);
        ecoSystem.getMarketPlaceDirectory().addMarketPlace(m2);
        
        Builder builder = new Builder("Rise", "Boston", "rise@support.com", "build", "build");
        ecoSystem.getUserAccDirectory().addAccount(builder);
        ecoSystem.getBuilderDirectory().addBuilder(builder);
        
        Builder builder2 = new Builder("Mission Park", "Cambridge", "support@park.com", "build2", "build");
        ecoSystem.getUserAccDirectory().addAccount(builder2);
        ecoSystem.getBuilderDirectory().addBuilder(builder2);
        
        User user = new User("Manoj", "Chandrashekar", "manuc2012@gmail.com", "8577990210", "manoj", "pass", "Boston");
        ecoSystem.getUserAccDirectory().addAccount(user);
        ecoSystem.getUserDirectory().addUser(user);
        
        User user2 = new User("Naga", "M", "naga@gmail.com", "8577990214", "naga", "pass", "Boston");
        ecoSystem.getUserAccDirectory().addAccount(user2);
        ecoSystem.getUserDirectory().addUser(user2);
        
        Fire fire = new Fire("fire", "fire", "Boston", "Samuel", 8646546846L);
        ecoSystem.getUserAccDirectory().addAccount(fire);
        ecoSystem.getFireDirectory().addFire(fire);
        
        Ambulance ambulance = new Ambulance("amb", "amb", "Private medic", "Josie", 911L);
        ecoSystem.getUserAccDirectory().addAccount(ambulance);
        ecoSystem.getAmbulanceDirectory().addAmbulance(ambulance);
        
        Maintenance maintenance = new Maintenance("main", "main", "Boston", "Rise", 85555L);
        ecoSystem.getUserAccDirectory().addAccount(maintenance);
        ecoSystem.getMaintenanceDirectory().addNewMaintenance(maintenance);
    }
}
